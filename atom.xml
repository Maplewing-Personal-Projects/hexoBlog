<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[新罪楓翼☆灆洢騎士]]></title>
  <subtitle><![CDATA[SINMAPLEWING☆LANYIKNIGHT]]></subtitle>
  <link href="http://blog.knightzone.org/atom.xml" rel="self"/>
  <link href="http://blog.knightzone.org"/>
  <updated>2013-10-23T07:10:51.650Z</updated>
  <id>http://blog.knightzone.org/</id>
  <author>
    <name><![CDATA[灆洢騎士]]></name>
    <email><![CDATA[sinmaplewing@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[#生活趣事：[13.10.22]微軟校園巡迴講座之嘉義一日遊]]></title>
    <link href="http://blog.knightzone.org/2013/10/22/2013-10-22--life-interesting-131022-microsoft-campus-lecture-tour-of-chiayi-day-trips/"/>
    <id>http://blog.knightzone.org/2013/10/22/2013-10-22--life-interesting-131022-microsoft-campus-lecture-tour-of-chiayi-day-trips/</id>
    <published>2013-10-23T06:17:00.000Z</published>
    <updated>2013-10-23T07:08:56.000Z</updated>
    <content type="html"><![CDATA[<p>由於翊筑的請託，我接下了禮拜二在嘉義的兩場微軟校園巡迴講座的工作，一場在吳鳳科大，一場在南華大學，兩場分別是當機動組兼負責人以及技術講師。由於原本這禮拜我只有禮拜三的師大場而已，應著這樣出去玩的機會，南華場將成為我第一場演講的場次，心裡不免有點緊張，原本想說第一場在自己學校裡演講應該不會出什麼包，但沒想到現在卻變成是在別的學校，真的是讓我有點擔心。</p>
<p>前一天晚上，我將鬧鐘設在了5:30、5:40、5:50、6:00、6:30，以避免我會沒聽到鬧鐘而睡遲了，設完鬧鐘準備完東西，我就早早就寢了。隔日早上醒來後，洗了個澡就背著大包小包的道具前往了台北車站，買了高鐵票搭上了7:30前往嘉義的高鐵。</p>
<p>到了嘉義大概已經9點左右了，在高鐵站的一樓買了個摩斯漢堡當早餐，就坐上了計程車前往吳鳳科大，路上司機還以為我是吳鳳科大的學生，跟我聊天，他還說他台北住20年了，他很熟台北。他愷愷而談地講了很多台北的路名之分布與今昔之地標後，我個人就認為司機真的是蠻厲害的，說熟台北真的不是隨口說說的而已。</p>
<p>到了吳鳳科大門口，就與Rick和Annping會合，中途換了MSP的衣服，之後到了教室準備準備就開始了早上的演講。由於我是機動組的，所以就拿著Rick的相機到處狂拍，感覺好似有點妨礙到他們演講了呢，真不好意思！XD</p>
<p>中午品妤開車來接我們，先送了Annping去民雄車站坐火車後，我們就往一家叫做噴水雞肉飯的餐廳去，這家的雞片飯真的爆好吃！！推薦大家可以去吃，真的很棒！！（這麼好吃的雞肉飯，要是下次吃不到該怎麼辦Q_Q）</p>
<p>吃完飯後，就往南華大學去。到了以後，品妤就先帶著我和Rick在南華大學繞繞，讓我印象最深刻的大概就是教授們住的小木屋吧！真的超特別，居然是蓋小木屋，而不只是蓋個普通的民房給教授們住，這小木屋給人的感覺會讓人有一種來到度假村的錯覺。繞完後，我們就到了教室外等，一直等到了3點進了教室開始演講。</p>
<p>演講過程說順利也算順利，說不順利倒是真的有出了一點狀況。記得在進教室前，我說：演講最怕遇到的狀況有PowerPoint當掉、Visual Studio當掉……等等，結果這句話就這樣一語成讖，在我用Visual Studio去示範開發Windows 8 App的時候，Visual Studio當掉了，一時也真的是慌了，幸好趕緊叫出工作管理員把它強制關掉，又再度重開Visual Studio，早知道進去前就不要說這種不吉利的話了Q_Q…</p>
<p>結束完後，我們在校門口拍了照、打了卡，就離開南華大學前往了民雄火車站，並各自分道揚鑣回家去了。在火車上，我閒來無事就拿出了《Javascript：優良部分》來看，結果看著看著就在火車上將它看完了，這大概也是我第一次看完O&#39;relly的書吧！XD&quot;</p>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/生活趣事/" term="生活趣事"/>
    <category scheme="http://blog.knightzone.org/categories/生活趣事/" term="生活趣事"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：文字標音]]></title>
    <link href="http://blog.knightzone.org/2013/10/13/2013-10-13-html-text-transcription/"/>
    <id>http://blog.knightzone.org/2013/10/13/2013-10-13-html-text-transcription/</id>
    <published>2013-10-14T05:20:00.000Z</published>
    <updated>2013-10-15T15:14:18.000Z</updated>
    <content type="html"><![CDATA[<p>本來是沒特別想寫這篇，不過想想這功能在最近已經被廣泛支援了，故就想說一定要好好來介紹一下！</p>
<p>大家在打入中文、日文的時候，有時候應該會想加入標音吧！正好以前IE有個標籤叫做ruby標籤可以做到這樣的事情，而在HTML5終於把ruby標籤做為標準加入了！</p>
<h1>標音</h1>
<p>底下一樣先用一個範例來解釋：</p>
<figure class="highlight lang-html"><figcaption><span>ruby01.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>標音<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ruby</span>&gt;</span>踏<span class="tag">&lt;<span class="title">rt</span>&gt;</span>ふ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span>まれた<span class="tag">&lt;<span class="title">ruby</span>&gt;</span>花<span class="tag">&lt;<span class="title">rt</span>&gt;</span>はな<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span> <span class="tag">&lt;<span class="title">br</span> /&gt;</span>
    被<span class="tag">&lt;<span class="title">ruby</span>&gt;</span>踐<span class="tag">&lt;<span class="title">rt</span>&gt;</span>ㄐㄧㄢˋ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span>踏<span class="tag">&lt;<span class="title">rt</span>&gt;</span>ㄊㄚˋ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span>的花朵
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/v34wkTDHS9mM83j3oOgw_ruby01.png" alt="ruby01.png"><br>上面的排版有點亂，不過為了不要讓文字中間出現空白，只好擠成一行了，底下列一下通用式用法的解說：</p>
<figure class="highlight lang-html"><figcaption><span>rubyusage.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">ruby</span>&gt;</span>
  [欲加上標音的字詞1] <span class="tag">&lt;<span class="title">rt</span>&gt;</span>[標音1]<span class="tag">&lt;/<span class="title">rt</span>&gt;</span>
  [欲加上標音的字詞2] <span class="tag">&lt;<span class="title">rt</span>&gt;</span>[標音2]<span class="tag">&lt;/<span class="title">rt</span>&gt;</span>
  ...
<span class="tag">&lt;/<span class="title">ruby</span>&gt;</span>
</pre></td></tr></table></figure>

<p>大體上就是如此，整個標音群組用ruby標籤包住，打上要標音的詞彙後，加上rt標籤去做標音，就可以達到標音的效果了！</p>
<blockquote>
<p>rb標籤：早期的寫法會把[欲加上標音的字詞]包在<code>&lt;rb&gt;...&lt;/rb&gt;</code>內，但是收錄進HTML5標準的時候，去除了rb標籤，所以目前的標準是要省略rb標籤的唷！</p>
</blockquote>
<h1>不支援標音之瀏覽器的表現方法</h1>
<p>假設今天要讓不支援標音的瀏覽器上看起來也要至少正常一點，可以將要多餘顯示的文字用rp標籤包住。這樣的話，有支援標音的瀏覽器會忽略rp標籤裡的內容，而不支援標音的瀏覽器就會顯示rp標籤裡的內容。底下看個範例：</p>
<figure class="highlight lang-html"><figcaption><span>ruby02.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>標音<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ruby</span>&gt;</span>踏<span class="tag">&lt;<span class="title">rp</span>&gt;</span>（<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;<span class="title">rt</span>&gt;</span>ふ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;<span class="title">rp</span>&gt;</span>）<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span>まれた<span class="tag">&lt;<span class="title">ruby</span>&gt;</span>花<span class="tag">&lt;<span class="title">rp</span>&gt;</span>（<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;<span class="title">rt</span>&gt;</span>はな<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;<span class="title">rp</span>&gt;</span>）<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span> <span class="tag">&lt;<span class="title">br</span> /&gt;</span>
    被<span class="tag">&lt;<span class="title">ruby</span>&gt;</span>踐<span class="tag">&lt;<span class="title">rp</span>&gt;</span>（<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;<span class="title">rt</span>&gt;</span>ㄐㄧㄢˋ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;<span class="title">rp</span>&gt;</span>）<span class="tag">&lt;/<span class="title">rp</span>&gt;</span>踏<span class="tag">&lt;<span class="title">rp</span>&gt;</span>（<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;<span class="title">rt</span>&gt;</span>ㄊㄚˋ<span class="tag">&lt;/<span class="title">rt</span>&gt;</span><span class="tag">&lt;<span class="title">rp</span>&gt;</span>）<span class="tag">&lt;/<span class="title">rp</span>&gt;</span><span class="tag">&lt;/<span class="title">ruby</span>&gt;</span>的花朵
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/6AhZ9VLCRHGdyaViPkKQ_ruby02.png" alt="ruby02.png"><br>左邊Google Chrome可以使用標音功能，故就直接顯示其標音，rp標籤裡之內容不管；而右邊Firefox不能使用標音功能，故就把rp標籤內的內容也一併顯示出來。</p>
<blockquote>
<ol>
<li>與w3schools.com裡的內容不同：rp標籤我是放在rt標籤外才能讓有標音功能的瀏覽器顯示正常，但w3schools.com內的卻放在rt標籤內。</li>
<li>Firefox支援Ruby否？根據w3schools.com的內容是說已經支援了，但我的Firefox還是沒有。如果你的Firefox沒有標音功能，可以到<a href="https://addons.mozilla.org/zh-tw/firefox/addon/html-ruby/" target="_blank">這裡(HTML Ruby)</a>下載套件安裝一下就支援了！</li>
</ol>
</blockquote>
<h1>參考資料</h1>
<ol>
<li>w3schools.com &gt; HTML &lt;ruby&gt; Tag：<a href="http://www.w3schools.com/tags/tag_ruby.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_ruby.asp">http://www.w3schools.com/tags/tag_ruby.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;rp&gt; Tag：<a href="http://www.w3schools.com/tags/tag_rp.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_rp.asp">http://www.w3schools.com/tags/tag_rp.asp</a></a></li>
<li>Re: &lt;rb&gt; as part of HTML5 ruby? from Dean Lee on 2011-12-29 (public-html-ig-zh@w3.org from December 2011)：<a href="http://lists.w3.org/Archives/Public/public-html-ig-zh/2011Dec/0021.html" target="_blank"><a href="http://lists.w3.org/Archives/Public/public-html-ig-zh/2011Dec/0021.html">http://lists.w3.org/Archives/Public/public-html-ig-zh/2011Dec/0021.html</a></a></li>
<li>日文歌詞標音編輯器：<a href="http://but.lolicom.org/tool/" target="_blank"><a href="http://but.lolicom.org/tool/">http://but.lolicom.org/tool/</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：無序、有序與定義清單]]></title>
    <link href="http://blog.knightzone.org/2013/10/12/2013-10-12-html-unordered-ordered-and-definition-lists/"/>
    <id>http://blog.knightzone.org/2013/10/12/2013-10-12-html-unordered-ordered-and-definition-lists/</id>
    <published>2013-10-13T05:48:00.000Z</published>
    <updated>2013-10-15T15:13:57.000Z</updated>
    <content type="html"><![CDATA[<p>清單在網頁中是很常使用到的東西，故多少還是要了解一下。在HTML中有三種不太一樣的清單，分別是無序清單、有序清單與定義清單，無序清單與有序清單的用法差不多，但與定義清單的用法差距比較大，底下來個別解釋其使用的方法。</p>
<h1>無序清單</h1>
<figure class="highlight lang-html"><figcaption><span>unordered-list.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>清單<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Knuckles<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Amy<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Shadow<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Silver<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/oei6c5rDR30zTXQ2OKNb_list01.png" alt="list01.png"></p>
<p>無序清單使用<code>&lt;ul&gt;...&lt;/ul&gt;</code>將整個清單包起來，每一項使用<code>&lt;li&gt;...&lt;li&gt;</code>即可，效果就跟用Word按的項目符號及編號做出來的差不多。</p>
<h1>有序清單</h1>
<figure class="highlight lang-html"><figcaption><span>ordered-list.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>清單<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ol</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Knuckles<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Amy<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Shadow<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>Silver<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/J0fvAwtITeprP45zFWS5_list02.png" alt="list02.png"></p>
<p>有序清單的使用與無序清單差不多，僅僅只是將ul(unordered list)標籤換成了ol(ordered list)標籤，效果就從原本的項目符號換成了數字編號。</p>
<p>如果要改變起始的編號，可使用<code>start</code>屬性，例如起始值要改成10，就寫<code>&lt;ol start=&quot;10&quot;&gt;</code>。</p>
<p>HTML5提供了新的屬性，可讓ol反向計算數值，利用<code>reversed</code>屬性即可，僅要寫<code>&lt;ol reversed&gt;</code>即可反向。(HTML5的功能性屬性，大多都是有寫就有效果，不用給值，沒寫就沒有效果)</p>
<h1>定義清單</h1>
<figure class="highlight lang-html"><figcaption><span>description-list.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>清單<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">dl</span>&gt;</span>
      <span class="tag">&lt;<span class="title">dt</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">dt</span>&gt;</span>
      <span class="tag">&lt;<span class="title">dd</span>&gt;</span>刺蝟音速小子（日文：ソニック・ザ・ヘッジホッグ；英文：Sonic The Hedgehog）是一個電子遊戲人物，也是世嘉公司的吉祥物，誕生於1990年。他是刺蝟音速小子系列的主角，也是世界上最有名的刺蝟，擁有超過音速的奔跑速度，被稱為「世界上最快的刺蝟」。以音速小子為主人公的電玩遊戲曾在多個平台發售，總累計銷量已經超過了7000萬套。以它為主角的動畫、漫畫作品也風靡全球。其主要創作者為中裕司，大島直人以及安田廣和。<span class="tag">&lt;/<span class="title">dd</span>&gt;</span>
      <span class="tag">&lt;<span class="title">dt</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">dt</span>&gt;</span>
      <span class="tag">&lt;<span class="title">dd</span>&gt;</span>初登場於音速小子2，是個有兩條尾巴的小狐狸，如同音速小子小弟般的存在。可以藉由兩條尾巴旋轉飛行，其飛行速度接近音速小子。因為天生有兩條尾巴而遭到同伴排擠，在偶然間遇到音速小子後便跟隨他。對於機械有相當高的領悟力。<span class="tag">&lt;/<span class="title">dd</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">dl</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/Pli6ycbqRBCM3nYpi7Sk_list03.png" alt="list03.png"></p>
<p>與前述兩種清單不同的地方在於，整個清單用<code>&lt;dl&gt;...&lt;/dl&gt;</code>包住，每一項從原本僅有一個li標籤，換成dt和dd各一個標籤，dt表示的是欲解釋的項目，dd表示的是欲解釋的內容，因為是解釋的內容，所以dd標籤在排版上會做自動縮排。</p>
<h1>巢狀清單用法</h1>
<p>若要在清單內的某一項再利用清單解釋，可用以下的做法：</p>
<figure class="highlight lang-html"><figcaption><span>nested-list.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>清單<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>
        Team Sonic
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>Knuckles<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span>
        Team Dark
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>Shadow<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>Rouge<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
          <span class="tag">&lt;<span class="title">li</span>&gt;</span>E-123 Omega<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/e9DpeeMqRWyGsKo6NtQZ_list04.png" alt="list04.png"></p>
<p>上面對於每一項li標籤內又在加入了另外一個清單去做描述，而清單內的清單瀏覽器會自動在排版上去做縮排，這是很方便可以做多層巢狀清單的用法，各位也可以自己試試看如果換成用ol和dl又會發生什麼事情。</p>
<h1>參考資料</h1>
<ol>
<li>w3schools.com &gt; HTML &lt;ul&gt; Tag：<a href="http://www.w3schools.com/tags/tag_ul.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_ul.asp">http://www.w3schools.com/tags/tag_ul.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;ol&gt; Tag：<a href="http://www.w3schools.com/tags/tag_ol.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_ol.asp">http://www.w3schools.com/tags/tag_ol.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;dl&gt; Tag：<a href="http://www.w3schools.com/tags/tag_dl.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_dl.asp">http://www.w3schools.com/tags/tag_dl.asp</a></a></li>
<li>這樣做就對了 &gt; HTML &lt;dl/&gt;, &lt;dt/&gt; 與 &lt;dd/&gt; 的誤用：<a href="http://josephjiang.com/entry.php?id=340" target="_blank"><a href="http://josephjiang.com/entry.php?id=340">http://josephjiang.com/entry.php?id=340</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：基本表格用法]]></title>
    <link href="http://blog.knightzone.org/2013/10/11/2013-10-11-html-basic-table-usage/"/>
    <id>http://blog.knightzone.org/2013/10/11/2013-10-11-html-basic-table-usage/</id>
    <published>2013-10-12T04:31:00.000Z</published>
    <updated>2013-10-15T15:13:40.000Z</updated>
    <content type="html"><![CDATA[<p>請原諒我很久沒繼續寫HTML教學文了，<br>一直很想寫，但因為生病的關係停了一陣子，<br>真的是很不好意思。</p>
<h1>行和列、欄和列、Row &amp; Column</h1>
<p>首先要先能夠分別［行和列］、［欄和列］、［Row &amp; Column］，這樣在表格的教學文中才不會出現問題，首先先看底下的圖來進行分辨：<br><img src="/image/hrFU4NcsTd2XnSS7psvg_slide-22-638.jpg" alt="Row &amp; Column"></p>
<p>或許各位會記不起來行和列的分別，所以我利用以前在赫哲補習班學到的方法來告訴大家，透過行與列的第一個筆畫即可分別，<code>行</code>的第一個筆畫偏上下，而<code>列</code>的第一個筆畫為左右，故可藉此來分別，不過中國大陸的行和列是與我們相反的，還請各位多多注意。</p>
<h1>基本表格結構</h1>
<p>底下先讓我們看一個基礎的範例：</p>
<figure class="highlight lang-html"><figcaption><span>BasicTableExample.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">table</span> <span class="attribute">border</span>=<span class="value">"1"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span>&gt;</span>英文名稱<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span>&gt;</span>中文名稱<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>索尼克<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>塔爾斯<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Knuckles<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>納克<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Amy<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>艾咪<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">table</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/sN65znISLmbf66BEF316_table01.png" alt="table01.png"></p>
<p>看到程式碼這麼長，大家應該都昏了吧！我來慢慢解釋給各位聽吧！</p>
<p>首先，<code>&lt;table&gt;...&lt;/table&gt;</code>包的是整個表格的內容，而table標籤本身有個屬性叫做border，在以前的標準，其值為框線的粗細大小；現時的標準，只有0與1這個值可以填，表明表格是否要有框線，若沒使用border，則預設為無框線。</p>
<p>再來有四組的<code>&lt;tr&gt;...&lt;/tr&gt;</code>，每組tr標籤個別表示的是表格裡的一列，在每組tr標籤中，有<code>&lt;td&gt;...&lt;/td&gt;</code>與<code>&lt;th&gt;...&lt;/th&gt;</code>兩種標籤，分別都表示一列裡面的一格資料，只不過th標籤表示的是標題資料，td標籤表示的是一般資料。而th標籤由於是表示標題資料，故有預設的粗體、文字置中樣式會自動套上去。這樣大概就是整個表格的架構了！</p>
<h1>合併格</h1>
<p>接著我們來合併格子吧！底下一樣給個範例：</p>
<figure class="highlight lang-html"><figcaption><span>BasicTableExample.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>表格<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">table</span> <span class="attribute">border</span>=<span class="value">"1"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span>&gt;</span>英文名稱<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span>&gt;</span>中文名稱<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span> <span class="attribute">rowspan</span>=<span class="value">"2"</span>&gt;</span>Sonic<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>索尼克<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>音速小子<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Tails<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>塔爾斯<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Knuckles<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>納克<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>Amy<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>艾咪<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
      <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span> <span class="attribute">colspan</span>=<span class="value">"2"</span>&gt;</span>E-123 Omega<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">table</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/qpjHGljxQUG6VIBU03Hw_table02.png" alt="table02.png"></p>
<p>我們可以在td標籤與th標籤插入colspan與rowspan屬性去給予要合併的格數。</p>
<p>在範例中，<code>Sonic</code>該格使用了<code>rowspan=&quot;2&quot;</code>，也就是指<code>Sonic</code>該格要佔兩個列(row)，所佔的位置為該格與下一列的對應位置的該格，這也使下一個tr內少了一個td標籤。同理，而<code>E-123 Omega</code>該格使用了<code>colspan=&quot;2&quot;</code>，也就是指<code>E-123 Omega</code>該格要佔兩個行(column)，所佔的位置為該格與向右一格的格子，故其所在的tr標籤少了一個td標籤，這也就是合併格子的用法。</p>
<p>這樣講完了基本的表格用法，等之後再來提提更進階的表格結構吧！(雖然這個之後應該會非常久就是了XD!!)</p>
<h1>參考資料</h1>
<ol>
<li>w3schools.com &gt; HTML Tables：<a href="http://www.w3schools.com/html/html_tables.asp" target="_blank"><a href="http://www.w3schools.com/html/html_tables.asp">http://www.w3schools.com/html/html_tables.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;table&gt; Tag：<a href="http://www.w3schools.com/tags/tag_table.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_table.asp">http://www.w3schools.com/tags/tag_table.asp</a></a></li>
<li>HTML表格（table）的常用語法：<a href="http://www.pt.ntu.edu.tw/hmchai/ptcomputer03_2/hHTML/HTMLtable.htm" target="_blank"><a href="http://www.pt.ntu.edu.tw/hmchai/ptcomputer03_2/hHTML/HTMLtable.htm">http://www.pt.ntu.edu.tw/hmchai/ptcomputer03_2/hHTML/HTMLtable.htm</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#Javascript：this用法整理]]></title>
    <link href="http://blog.knightzone.org/2013/10/09/2013-10-09-javascriptthis-usage-in-order/"/>
    <id>http://blog.knightzone.org/2013/10/09/2013-10-09-javascriptthis-usage-in-order/</id>
    <published>2013-10-10T04:35:00.000Z</published>
    <updated>2013-10-15T15:13:22.000Z</updated>
    <content type="html"><![CDATA[<p>常用Javascript的人都知道，［this這個關鍵字在一個函式內究竟指向誰］的這個問題很令人頭大，本人在這裡整理了一下Javascript中this的指向的五種不同情況，其中前三種屬於基本的情況，而後兩種情況可基於前三種情況的方式來進行思考。</p>
<h1>1.this指向於調用該函式之物件</h1>
<p>如果你有學過C/C++，你可能會記得一個物件內的成員函式裡的this指的即是該成員函式所在之物件，但在Javascript裡則有那麼些許不同，Javascript裡的this看的是究竟是誰調用該函式，而不是看該函式被定義在哪個物件內，這個大原則抓到了，基本上就已經可以探知this的奧秘了。底下寫一下這種情況的公式與範例：</p>
<figure class="highlight lang-js"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>物件.函式(); <span class="comment">//函式內的this指向該物件</span>
</pre></td></tr></table></figure>

<figure class="highlight lang-js"><figcaption><span>範例</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="keyword">var</span> obj = {
  x: <span class="number">20</span>,
  f: <span class="keyword">function</span>(){ console.log(<span class="keyword">this</span>.x); }
};

obj.f(); <span class="comment">//由於調用f函式時，點前面物件為obj，故f內的this指向obj，則輸出為20。</span>

obj.innerobj = {
  x: <span class="number">30</span>,
  f: <span class="keyword">function</span>(){ console.log(<span class="keyword">this</span>.x); }
}

obj.innerobj.f(); <span class="comment">//由於調用f函式時，點前面物件為obj.innerobj，故f內的this指向obj.innerobj，則輸出為30。</span>
</pre></td></tr></table></figure>

<h1>2.this指向全域物件(瀏覽器：window物件、node.js：GLOBAL物件)</h1>
<p>如果調用函式的前方並未有物件，則函式內this就指向全域物件。在瀏覽器內全域物件為window物件，而在node.js中全域物件則為GLOBAL物件。底下一樣寫一下這種情況的公式與範例：</p>
<figure class="highlight lang-js"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>函式(); <span class="comment">//函式內的this指向全域物件</span>
</pre></td></tr></table></figure>

<figure class="highlight lang-js"><figcaption><span>範例</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">var</span> x = <span class="number">10</span>;
<span class="keyword">var</span> f = <span class="keyword">function</span>(){
  console.log(<span class="keyword">this</span>.x);
};

f(); <span class="comment">//由於調用f函式時，前方並未有[物件.]的形式，故f內的this指向全域物件，則輸出全域變數的x(10)。</span>
</pre></td></tr></table></figure>

<blockquote>
<p>例外：在使用node.js時，若使用<code>node file.js</code>這樣的方式執行js檔，並不會讓宣告的全域變數掛在全域物件上(意指會利用function將code整個包起來執行)，故輸出應為undefined。</p>
</blockquote>
<h2>前兩種情況常見誤導範例</h2>
<h3>範例一、物件之成員函式內有函式(感謝<a href="http://0w0.logdown.com/posts/41667-about-me" target="_blank">NSLin</a>在實務讀書會上的範例Code)</h3>
<figure class="highlight lang-js"><figcaption><span>example1.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="keyword">var</span> x = <span class="number">10</span>;
<span class="keyword">var</span> obj = {
  x: <span class="number">20</span>,
  f: <span class="keyword">function</span>(){
    console.log(<span class="keyword">this</span>.x);
    <span class="keyword">var</span> foo = <span class="keyword">function</span>(){ console.log(<span class="keyword">this</span>.x); }
    foo(); <span class="comment">// (2)</span>
  }
};

obj.f();  <span class="comment">// (1)</span>
</pre></td></tr></table></figure>

<p>這個範例會輸出多少呢？別忘記大原則，在Javascript裡的this看的是究竟是誰調用該函式，故並不會輸出<code>20 20</code>，而是輸出<code>20 10</code>，為什麼呢？因為(1)obj.f()調用時，f前面物件為obj，故f內的this指向obj。但因為調用f內的(2)foo函式時是用foo()，調用的前方並未有物件，故foo內的this指向全域物件，所以輸出會是全域變數的x的值。</p>
<p>若要讓foo內使用obj.x的值，解法如下：</p>
<figure class="highlight lang-js"><figcaption><span>example1.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="keyword">var</span> x = <span class="number">10</span>;
<span class="keyword">var</span> obj = {
  x: <span class="number">20</span>,
  f: <span class="keyword">function</span>(){
    console.log(<span class="keyword">this</span>.x);
    <span class="keyword">var</span> that = <span class="keyword">this</span>; <span class="comment">//使用that保留在這個函式內的this</span>
    <span class="keyword">var</span> foo = <span class="keyword">function</span>(){ console.log(that.x); } <span class="comment">//使用that取得obj</span>
    foo();
  }
};

obj.f();
</pre></td></tr></table></figure>

<h3>範例二、借用函式</h3>
<figure class="highlight lang-js"><figcaption><span>example2.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="keyword">var</span> x = <span class="number">10</span>;
<span class="keyword">var</span> obj = {
  x: <span class="number">20</span>,
  f: <span class="keyword">function</span>(){ console.log(<span class="keyword">this</span>.x); }
};

obj.f(); <span class="comment">// (1)</span>

<span class="keyword">var</span> fOut = obj.f;
fOut(); <span class="comment">// (2)</span>

<span class="keyword">var</span> obj2 = {
  x: <span class="number">30</span>,
  f: obj.f
}

obj2.f(); <span class="comment">// (3)</span>
</pre></td></tr></table></figure>

<p>範例中三次調用之函式的this所指向的物件為何，不知道各位能不能看得出來。雖然用的是同一個函式，但是因為調用的不同，故this所指向的物件就不同。(1)obj.f()的f所指向的是obj，這比較沒有問題，輸出的會是20；而(2)fOut()裡的this，則是因為調用時前方無物件，則this所指的是全域物件，輸出的會是10；最後(3)obj2.f()則是obj2去呼叫f，故f內的this指向的是obj2，輸出的會是30。</p>
<h1>3.this指向利用call或apply所指派給this的物件</h1>
<p>有個方法可以更動前兩種敘述所讓this指派的值，就是利用call與apply。call與apply都是呼叫該函式並讓該函式的this指向給予call或apply的第一個參數。至於call和apply的差別則是在於其後面給予被調用之函式的參數放入的方法不同，一個是直接攤平放在第二個以後的參數；一個是直接放入一個裡面放要給予之參數的陣列。底下一樣看一下公式和範例：</p>
<figure class="highlight lang-js"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>(A物件.)函式.call(B物件,參數<span class="number">1</span>,參數<span class="number">2</span>,參數<span class="number">3</span>, ......); <span class="comment">//函式的this指向B物件(若B物件為null，則指向全域物件)</span>
(A物件.)函式.apply(B物件,[參數<span class="number">1</span>,參數<span class="number">2</span>,參數<span class="number">3</span>, ......]); <span class="comment">//函式的this指向B物件(若B物件為null，則指向全域物件)</span>
</pre></td></tr></table></figure>

<figure class="highlight lang-js"><figcaption><span>範例</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="keyword">var</span> obj = {
  x: <span class="number">20</span>;
  f: <span class="keyword">function</span>(){ console.log(<span class="keyword">this</span>.x); }
};

<span class="keyword">var</span> obj2 = {
  x: <span class="number">30</span>;
};

obj1.f.call(obj2); <span class="comment">//利用call指派f的this為指向obj2，故輸出為30</span>
</pre></td></tr></table></figure>

<h1>4.this指向new所產生之新物件</h1>
<p>若將函式當作建構式(constructor)來用，則內部的this則指向於new所產生之新物件。</p>
<figure class="highlight lang-js"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">new</span> 建構式(); <span class="comment">//建構式內之this指向new所產生之新物件</span>
</pre></td></tr></table></figure>

<figure class="highlight lang-js"><figcaption><span>範例</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">Monster</span><span class="params">()</span>{</span>
  <span class="keyword">this</span>.hp = <span class="number">100</span>;
};

<span class="keyword">var</span> monster = <span class="keyword">new</span> Monster(); <span class="comment">//Monster的this指向new出來之新物件並回傳回來，new的寫法就類似於下面的寫法。</span>
<span class="keyword">var</span> monster = (<span class="keyword">function</span>(){
  <span class="keyword">var</span> _<span class="keyword">new</span> = { constructor: Monster, __proto__: Monster.prototype }; <span class="comment">//在IE內可能不相似</span>
  _<span class="keyword">new</span>.constructor(); <span class="comment">//這也是為何說可以利用前三種情況來變化的原因，constructor呼叫時，this指向的即是_new這個物件。</span>
  <span class="keyword">return</span> _<span class="keyword">new</span>;
})();
</pre></td></tr></table></figure>

<h1>5.callback函式內的this會指向於調用放入該callback的函式之this所指向之物件</h1>
<p>先想想在jQuery中，我們若要讓#button這個元素被click的時候，內容改為“Clicked”這樣的字串，該如何寫呢？</p>
<figure class="highlight lang-js"><figcaption><span>clicked.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>$(<span class="string">'#button'</span>).click(<span class="keyword">function</span>(){
  <span class="keyword">this</span>.html(<span class="string">"Clicked"</span>);
})
</pre></td></tr></table></figure>

<p>此時這個this居然會指向$(‘#button’)這個物件，感覺很自然，但實際想想會覺得很神奇。假設你寫一個function，它可以吃一個function，並在裡面呼叫傳入的function，你該怎麼寫呢？</p>
<figure class="highlight lang-js"><figcaption><span>function-to-function.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="keyword">var</span> f = <span class="keyword">function</span>(innerf){
  <span class="comment">//前面的處理</span>
  innerf(arg1, arg2, arg3, ......);
  <span class="comment">//後面的處理</span>
}
</pre></td></tr></table></figure>

<p>但如果這樣寫的話，innerf裡的this根據前述規則就應該是全域物件了！那為什麼常常別人實作的callback函式可讓this指向於調用放入該callback的函式之this所指向之物件呢？這表示大家實作上會遵守一個規則，會將自己的this傳給callback當作它的this來用！這也是為什麼我說這個情況其實也是前三種情況的變化而已了！所以上面的code應該改成如下的形式會比較好：</p>
<figure class="highlight lang-js"><figcaption><span>function-to-function-improved.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="keyword">var</span> f = <span class="keyword">function</span>(innerf){
  <span class="comment">//前面的處理</span>
  innerf.call(<span class="keyword">this</span>, arg1, arg2, arg3, ......);
  <span class="comment">//或是innerf.apply(this, [arg1, arg2, arg3, ......])</span>
  <span class="comment">//後面的處理</span>
}
</pre></td></tr></table></figure>

<h1>參考資料</h1>
<ol>
<li>Javascript的this用法：<a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html" target="_blank"><a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html">http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html</a></a></li>
<li>[图解] 你不知道的 JavaScript - “this”：<a href="http://www.cnblogs.com/ruxpinsp1/archive/2008/04/20/1162463.html" target="_blank"><a href="http://www.cnblogs.com/ruxpinsp1/archive/2008/04/20/1162463.html">http://www.cnblogs.com/ruxpinsp1/archive/2008/04/20/1162463.html</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/Javascript/" term="Javascript"/>
    <category scheme="http://blog.knightzone.org/categories/Javascript/" term="Javascript"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#生活趣事：[13.10.07]－與時間競賽同時做完推甄資料寄送、微軟社群之星面試以及實務讀書會演講]]></title>
    <link href="http://blog.knightzone.org/2013/10/07/2013-10-07--life-interesting-race-against-time/"/>
    <id>http://blog.knightzone.org/2013/10/07/2013-10-07--life-interesting-race-against-time/</id>
    <published>2013-10-08T06:23:00.000Z</published>
    <updated>2013-10-21T14:57:43.000Z</updated>
    <content type="html"><![CDATA[<p>標題有越下越長的趨勢，不太是個好現象呀……</p>
<p>中午兩點上完了互動網站設計，與皮卡、台灣偉以及Max三人到學校附近的貝果店吃飯，由於趕著等等要去完成推甄資料，我還是第一次吃飯比在座的人都還快。就在餐點還未來的時候，我趁著這個空檔整理備審資料時，卻發現兩吋的照片不見了，心中一陣恐慌，突然Max提醒我水源市場附近有拍證件照的機器，我就開始規劃了接下來的行程。</p>
<p>兩點五十分吃完飯後，首先，因為台灣偉先生要先傳真資料，我們第一步先進入了位於師大夜市外側的7-11，但由於傳真過去的圖片似乎不太清楚，結果用得有點久，我就先與Max兩人先往捷運站走。到了台電大樓站後坐了捷運到公館站，出來出口後快速向證件照機器前進，結果發現拍照要150元，看著只剩下100元紙鈔和一堆10元硬幣的錢包，忍痛將僅剩的一張紅色鈔票以及五個銀色硬幣給投了下去。拍完後又往光南大批發衝，買了文具以及資料袋後，又往學校衝，直達蔣老師辦公室後跟老師拿了推薦信，接著又到PC室確認了資料並將它們裝袋後，就到校門口的郵局把資料給寄出去了，那時已經四點左右了。</p>
<p>由於四點三十分要到微軟公司去面試社群之星，就趕緊從公館站坐車到微軟公司，結果已經遲了二十分鐘，那邊的職員還笑笑地問我是否是迷路了，幸好面試時，主管並沒有問我和另外一位跟我同組的組員－重光很刁鑽的問題，僅僅只是要我們做個簡單的自我介紹，以及詢問我們之前繳交的報名表上所填的資訊而已。結束後，又趕回公館的師大分部校區，準備進行晚上讀書會的課程。</p>
<p>今天這一路與時間的賽跑中，真的深刻地讓我了解到短時間內進行一大堆行程的可怕，研究所推甄真的一生只要一次就好了，再多真的吃不消呀！</p>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/生活趣事/" term="生活趣事"/>
    <category scheme="http://blog.knightzone.org/categories/生活趣事/" term="生活趣事"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#生活趣事：[13.10.06]－與Jack Tu在信義誠品和大真文化祝編輯的聊天]]></title>
    <link href="http://blog.knightzone.org/2013/10/06/2013-10-06--life-interesting-with-jack-tu-at-the-xinyi-eslite-and-culture-editor-chat/"/>
    <id>http://blog.knightzone.org/2013/10/06/2013-10-06--life-interesting-with-jack-tu-at-the-xinyi-eslite-and-culture-editor-chat/</id>
    <published>2013-10-07T04:39:00.000Z</published>
    <updated>2013-10-21T15:39:35.000Z</updated>
    <content type="html"><![CDATA[<p>已經好久沒有寫日記心得文了，請原諒我呀Q_Q</p>
<p>今日菲特颱風來襲，說到菲特颱風，我的臉書和噗浪一堆人都將菲特諧音於魔法少女奈葉裡的菲特，並說這颱風可不容小覷。說真的，不用到用這種方式來形容這颱風的強勁，只要稍微出去一下就大概了解這颱風威力有多麼地可怕。</p>
<p>Jack Tu昨日來電，說是今日中午大真文化的祝編輯要來跟他談某本書的人設問題，這問題至少從暑假就一直談到現在，遲遲沒有定稿，至於內容是什麼恕我就不在此贅述了。</p>
<p>中午Jack Tu來到我家，我整理整理就與他出門去吃午餐，我們走到了光華，路上撐著雨傘，結果我的雨傘就被菲特颱風給吹爛掉了，害我這一路上都一直拿著爛掉的雨傘在死撐著。到了光華一樓，新打造的室內吃飯空間跟以前狹窄的空間有著強烈的對比，這次裝潢真的是好多了！至少我會開始想待在那兒吃飯了。</p>
<p>吃了少少的咖哩飯後，就搭著捷運到了市政府站，透過地下街走到了信義誠品三樓，與祝編輯會面了。由於要談論人設的事情，故在漫畫區拼命地找資料並介紹漫畫給祝編輯了解，Jack Tu一直推廣自己喜愛的作品給祝編輯，這是非常可怕的大推坑呀！！！</p>
<p>買完後就到了阪急樓上一家貝果店吃飯，吃飯途中他們兩個談論地很熱絡，而我則在旁邊看著參考資料中的編輯女王這部漫畫，頗有趣的，之後應該來好好追一下。</p>
<p>談論完後，我們就各自回家了。祝編輯知道我會做網站後，也希望我能夠幫忙他們，等等就寄個資料過去吧！</p>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/生活趣事/" term="生活趣事"/>
    <category scheme="http://blog.knightzone.org/categories/生活趣事/" term="生活趣事"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：圖片與超連結]]></title>
    <link href="http://blog.knightzone.org/2013/09/10/2013-09-10-html-picture-with-hyperlink/"/>
    <id>http://blog.knightzone.org/2013/09/10/2013-09-10-html-picture-with-hyperlink/</id>
    <published>2013-09-11T03:12:00.000Z</published>
    <updated>2013-10-15T15:12:49.000Z</updated>
    <content type="html"><![CDATA[<p>該如何在網頁內放置圖片以及超連結，我照慣例先使用一個範例讓你看，再來解釋這個範例的意義。</p>
<figure class="highlight lang-html"><figcaption><span>pictureHyperlinkExample.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>圖片與超連結範例<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h1</span> <span class="attribute">id</span>=<span class="value">"top"</span>&gt;</span>圖片與超連結<span class="tag">&lt;/<span class="title">h1</span>&gt;</span> <span class="comment">&lt;!-- 設定h1的id為top --&gt;</span>
    <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"http://www.knightzone.org/image/thumbs/32.jpg"</span> <span class="attribute">alt</span>=<span class="value">"全身圖"</span> /&gt;</span> <span class="comment">&lt;!-- 放置圖片 --&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://www.google.com"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>往Google<span class="tag">&lt;/<span class="title">a</span>&gt;</span> <span class="comment">&lt;!-- 連結並換新分頁 --&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>好幾個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#top"</span>&gt;</span>回Top<span class="tag">&lt;/<span class="title">a</span>&gt;</span> <span class="comment">&lt;!-- 連結至id為top的地方 --&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/GyeO6tYCTP6KqSzrKSCi_html4-1.png" alt="html4-1.png"></p>
<h1>img標籤：放置圖片</h1>
<p>如果要在網頁中放置圖片，可使用img標籤，它具有兩個屬性必須設定，一個為src屬性，是放你的圖片的路徑；另外一個則是alt屬性，是放你的圖片的說明文字，也有可能會被用於圖片連結不到時的替代文字。</p>
<figure class="highlight lang-html"><figcaption><span>img.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"圖片所在路徑"</span> <span class="attribute">alt</span>=<span class="value">"說明文字"</span> /&gt;</span>
</pre></td></tr></table></figure>

<p>當要改變圖片的大小，可使用CSS語法，或是使用width(寬度)與height(高度)屬性，此兩個屬性的值在HTML5中必為數值，單位是像素點(pixel)，而若在HTML4.01裡還可以使用%數。建議在你每個img標籤上都盡量加上這兩個屬性，這樣在網頁載入時若連結不到該圖片，還是會保留一塊相同大小的方塊，可避免排版亂掉。</p>
<figure class="highlight lang-html"><figcaption><span>imgwh.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"圖片所在路徑"</span> <span class="attribute">alt</span>=<span class="value">"說明文字"</span> <span class="attribute">width</span>=<span class="value">"圖片寬度"</span> <span class="attribute">height</span>=<span class="value">"圖片高度"</span>/&gt;</span>
</pre></td></tr></table></figure>

<h1>a標籤：放置超連結</h1>
<p>若要放置超連結，可使用a標籤，它有href屬性可以設定該連結要往那兒去，當使用者點擊時瀏覽器會跳至該頁面。</p>
<figure class="highlight lang-html"><figcaption><span>a.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"網頁所在路徑"</span>&gt;</span>連結文字<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
</pre></td></tr></table></figure>

<p>如果不希望連結蓋掉目前的網頁，而是希望開新分頁去顯示連結的網頁，則可加上target屬性，並給予值為<code>_blank</code>。</p>
<figure class="highlight lang-html"><figcaption><span>newpage.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"網頁所在路徑"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>連結文字<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
</pre></td></tr></table></figure>

<p>超連結不一定要連到其他的網頁，如果這個網頁過長時，要上上下下滑動很麻煩時，可指定將瀏覽器跳到某個HTML元素位置上，每個HTML元素都可以設定id屬性去給予元素一個id名稱，這樣a標籤就可以連結到該元素上。a標籤僅需要在href屬性的值前方加上#，後面再加上要連結到的元素的id屬性名稱即可。以前HTML4.01會使用a標籤的name屬性去設立錨點，讓超連結可以連結該地方，不過到了HTML5後就刪除name屬性了，一律改使用任何HTML元素的id屬性來設定。</p>
<figure class="highlight lang-html"><figcaption><span>id.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">h1</span> <span class="attribute">id</span>=<span class="value">"id名稱"</span>&gt;</span>標題<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
...
<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#id名稱"</span>&gt;</span>連結文字<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
</pre></td></tr></table></figure>

<p>當然你可以將上面連結到其他網頁以及某個HTML元素位置上的方法結合起來，變成連結到該頁的某個HTML元素上。</p>
<figure class="highlight lang-html"><figcaption><span>otherpageId.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"網頁所在路徑#id名稱"</span>&gt;</span>連結文字<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
</pre></td></tr></table></figure>

<h1>相對路徑與絕對路徑</h1>
<p>以上不論是img標籤的src屬性或是a標籤的href屬性皆是放置一個檔案的路徑位置，路徑分成兩種：一種是相對路徑，另外一種則是絕對路徑。</p>
<h2>相對路徑</h2>
<p>相對路徑是指從你所在的位置該如何走到欲連結到的檔案的位置的路徑表示，底下用幾張我以前的ppt來解說。</p>
<p>假設該網頁名稱為second6.html，若要連結到與網頁在同資料夾的圖片，則直接打上該名字即可。<br><img src="/image/wpLKVi59SlecwcHkgmR2_html4-2.png" alt="html4-2.png"></p>
<p>若要連結到位於跟網頁同資料夾的picture資料夾內的圖片，則打上picture，後面再加上斜線分隔，再打上圖片名稱。如果資料夾非常多層則是一樣的道理，可以寫成<code>同層資料夾/內層資料夾1/內層資料夾2/...以此類推/圖片名稱</code>。<br><img src="/image/hxoYB90RyVoypWLiGwRQ_html4-3.png" alt="html4-3.png"></p>
<p>若要連結的圖片在網頁所在的資料夾的上一層，則使用..去表示。<br><img src="/image/kQiNSVBnTKm0EWe0YSSr_html4-4.png" alt="html4-4.png"></p>
<h2>絕對路徑</h2>
<p>絕對路徑通常是為了連結外部的資料，不在本網站內的資料去使用，因為不是本站的資料，所以無法使用相對路徑去連結到，只能使用絕對路徑去連結。若使用相對路徑，則網頁搬到不同的地方會連結到的位置會不同，端看該網頁的位置在何處；但若使用絕對路徑，則網頁不管搬到不同的地方則連結到的地方會是相同的。若你的資料會跟你的網站一起搬動，建議使用相對路徑；若不會，則使用絕對路徑。</p>
<p>若是使用絕對路徑，則開頭會先寫明協定名稱，接著是IP位置、Domain Name或是電腦內的絕對路徑，例如要連結到Google就寫<code>&lt;a href=&quot;http://www.google.com&gt;Google連結&lt;/a&gt;</code>，如果要瀏覽網頁者連到他自己電腦的圖片則使用<code>&lt;img src=&quot;file:///C:/myphoto.jpeg&quot; /&gt;</code>(當然我不建議連到本機端這種用法)。</p>
<h1>參考資料</h1>
<ol>
<li>w3schools.com &gt; HTML &lt;a&gt; Tag：<a href="http://www.w3schools.com/tags/tag_a.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_a.asp">http://www.w3schools.com/tags/tag_a.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;img&gt; Tag：<a href="http://www.w3schools.com/tags/tag_img.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_img.asp">http://www.w3schools.com/tags/tag_img.asp</a></a></li>
<li>html5 - HTML Anchors with &#39;name&#39; or &#39;id&#39;? - Stack Overflow：<a href="http://stackoverflow.com/questions/484719/html-anchors-with-name-or-id" target="_blank"><a href="http://stackoverflow.com/questions/484719/html-anchors-with-name-or-id">http://stackoverflow.com/questions/484719/html-anchors-with-name-or-id</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#Excel：將Excel試算表文件轉圖片]]></title>
    <link href="http://blog.knightzone.org/2013/09/09/2013-09-09-excel-the-excel-trial-and-error-file-transfer-pictures/"/>
    <id>http://blog.knightzone.org/2013/09/09/2013-09-09-excel-the-excel-trial-and-error-file-transfer-pictures/</id>
    <published>2013-09-10T02:45:00.000Z</published>
    <updated>2013-10-15T15:12:29.000Z</updated>
    <content type="html"><![CDATA[<p>基於昨天瑪莉羊問我該怎麼將課表的Excel檔轉成圖片，又剛好我要把成績單的Excel檔也要轉成圖片，所以我就查了一下開怎麼做，底下列出如何將試算表轉成圖片。</p>
<h1>轉換步驟</h1>
<ol>
<li><p>首先先開啟Excel檔案，並將要轉成圖片的範圍框起來。<br><img src="/image/shNDc1b2SKCrx6rY6ut4_excel1.png" alt="excel1.png"></p>
</li>
<li><p>再來對該範圍按下Ctrl+C或是點擊滑鼠右鍵選擇複製。<br><img src="/image/Rh8XEqqCS72Oyupr1yX7_excel2.png" alt="excel2.png"></p>
</li>
<li><p>最後在小畫家(或是其他繪圖軟體)裡面按下Ctrl+V貼上後儲存成圖片即可。<br><img src="/image/qRo1YIK2TUajq4ycFdBc_excel3.png" alt="excel3.png"></p>
</li>
</ol>
<h1>參考資料</h1>
<ol>
<li>How to Save an Excel Spreadsheet As an Image or Picture | eHow：<a href="http://www.ehow.com/how_5968604_save-excel-spreadsheet-image-picture.html" target="_blank"><a href="http://www.ehow.com/how_5968604_save-excel-spreadsheet-image-picture.html">http://www.ehow.com/how_5968604_save-excel-spreadsheet-image-picture.html</a></a></li>
<li>Excel: Save a worksheet as an image file | CyberText Newsletter：<a href="http://cybertext.wordpress.com/2011/06/29/excel-save-a-worksheet-as-an-image-file/" target="_blank"><a href="http://cybertext.wordpress.com/2011/06/29/excel-save-a-worksheet-as-an-image-file/">http://cybertext.wordpress.com/2011/06/29/excel-save-a-worksheet-as-an-image-file/</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/Excel/" term="Excel"/>
    <category scheme="http://blog.knightzone.org/categories/Excel/" term="Excel"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：設定網頁編碼]]></title>
    <link href="http://blog.knightzone.org/2013/09/08/2013-09-08-html-set-the-page-encoding/"/>
    <id>http://blog.knightzone.org/2013/09/08/2013-09-08-html-set-the-page-encoding/</id>
    <published>2013-09-08T23:46:00.000Z</published>
    <updated>2013-10-15T15:12:18.000Z</updated>
    <content type="html"><![CDATA[<p>電腦裡面只能儲存0與1，並且透過二進位的方式用0與1儲存了數字，透過數字與文字的對應，電腦可以利用儲存數字的方式去儲存文字，並在顯示的時候透過對應表去找出該數字代表的文字為何，這樣的對應儲存模式就被稱為編碼。這世界上有很多語言，故編碼也有很多種，若使用的編碼不對，會導致網頁上出現我們有時候去瀏覽國外網站的時候常常會出現的亂碼現象，如下圖所示：<br><img src="/image/zHKS5sZoRK2oecYqNALa_html3-1.png" alt="html3-1.png"></p>
<p>因此我們必須要確定我們製作出來的網站是用什麼編碼方式儲存的，並且要試著從網頁裡去設定其網頁編碼，讓瀏覽器可以用正確的編碼方式去瀏覽該網站。</p>
<h1>常見編碼</h1>
<p>各國都有不同的編碼，底下試著列出一些常見的編碼：</p>
<table>
<thead>
<tr>
<th>語言</th>
<th>常見編碼名稱</th>
</tr>
</thead>
<tbody>
<tr>
<td> 繁體中文</td>
<td>Big5</td>
</tr>
<tr>
<td> 簡體中文</td>
<td>GBK </td>
</tr>
<tr>
<td>   日文</td>
<td>Shift-JIS</td>
</tr>
<tr>
<td>   韓文</td>
<td>EUC-KR</td>
</tr>
</tbody>
</table>
<p>由上表可知，每個語言都有其不同的當地的編碼方式，那麼如果要顯示所有國家語言的網站該怎麼辦？</p>
<p>不管你是否要做一個純粹單一語言的網站或是要做多語言的網站，我都會建議你使用Unicode萬國碼的 <strong>UTF-8</strong> 的編碼方式去儲存網站，這個編碼不僅支援多個國家的語言，有些繁體中文的罕見字其實用Big5是沒辦法表示的，但是用萬國碼卻是OK的！</p>
<h1>如何儲存UTF-8格式的網頁</h1>
<p>如果使用的是記事本來編輯網頁，可在儲存檔案的時候，點擊底下的編碼的選項，選擇UTF-8即可，如下圖所示：<br><img src="/image/KiIKvWqDQLSzRSWF14BJ_html3-2.png" alt="html3-2.png"></p>
<p>如果是使用Notepad++來編輯網頁，可在上面工具列的［編碼］裡面選擇［轉換至UTF-8碼格式(檔首無BOM)］即可，如下圖所示：<br><img src="/image/9Ycmyz0iRtC7VjIzDqnH_html3-3.png" alt="html3-3.png"></p>
<h1>用meta標籤來設定該網頁的編碼</h1>
<p>meta標籤在HTML文件中，是用來設定該文件的meta資料，除了可以用來設定編碼外，還可以設定很多其他跟網頁有關的資料，不過在這裡我只先提該如何設定網頁的編碼。</p>
<p>你可以在head元素內加上<code>&lt;meta charset=&quot;編碼名稱&quot; /&gt;</code>即可設定網頁的編碼，如果你要設定其為UTF-8的編碼，可如底下範例所示：</p>
<figure class="highlight lang-html"><figcaption><span>UTF-8.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>...
<span class="tag">&lt;<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span> /&gt;</span>
  <span class="tag">&lt;<span class="title">title</span>&gt;</span>標題<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
<span class="tag">&lt;/<span class="title">head</span>&gt;</span>
...
</pre></td></tr></table></figure>

<p>在HTML4.01的時候，是使用<code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;</code>這麼冗長的敘述，但是現在HTML5，你可以使用上述如此簡短的敘述即可。</p>
<h1>參考資料</h1>
<ol>
<li>MOZILLA DEVELOPER NETWORK &gt; 應該避免的過時語法：<a href="https://developer.mozilla.org/zh-TW/docs/Web_%E9%96%8B%E7%99%BC/Historical_artifacts_to_avoid" target="_blank"><a href="https://developer.mozilla.org/zh-TW/docs/Web_%E9%96%8B%E7%99%BC/Historical_artifacts_to_avoid">https://developer.mozilla.org/zh-TW/docs/Web_%E9%96%8B%E7%99%BC/Historical_artifacts_to_avoid</a></a></li>
<li>html5 - &lt;meta charset=&#39;utf-8&#39;&gt; vs &lt;meta http-equiv=&#39;Content-Type&#39;&gt; - Stack Overflow：<a href="http://stackoverflow.com/questions/4696499/meta-charset-utf-8-vs-meta-http-equiv-content-type" target="_blank"><a href="http://stackoverflow.com/questions/4696499/meta-charset-utf-8-vs-meta-http-equiv-content-type">http://stackoverflow.com/questions/4696499/meta-charset-utf-8-vs-meta-http-equiv-content-type</a></a></li>
<li>w3schools.com &gt; HTML &lt;meta&gt; Tag：<a href="http://www.w3schools.com/tags/tag_meta.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_meta.asp">http://www.w3schools.com/tags/tag_meta.asp</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：基本內文文章結構]]></title>
    <link href="http://blog.knightzone.org/2013/09/07/2013-09-07-html-text-structure/"/>
    <id>http://blog.knightzone.org/2013/09/07/2013-09-07-html-text-structure/</id>
    <published>2013-09-07T17:07:00.000Z</published>
    <updated>2013-10-15T15:11:59.000Z</updated>
    <content type="html"><![CDATA[<p>HTML文件裡面的內容大概如你在報紙上看到的一篇篇文章，一樣會具備標題、副標題、段落等等格式，我們就先給一個範例來表現一篇文章的HTML文件吧！</p>
<figure class="highlight lang-html"><figcaption><span>article.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>文章範例<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>主要標題<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h2</span>&gt;</span>副標題<span class="tag">&lt;/<span class="title">h2</span>&gt;</span>
    <span class="tag">&lt;<span class="title">hr</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>第一個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>第二個段落<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;<span class="title">p</span>&gt;</span>
      <span class="tag">&lt;<span class="title">em</span>&gt;</span>斜體強調<span class="tag">&lt;/<span class="title">em</span>&gt;</span>，<span class="tag">&lt;<span class="title">br</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">strong</span>&gt;</span>粗體強調<span class="tag">&lt;/<span class="title">strong</span>&gt;</span>，<span class="tag">&lt;<span class="title">br</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">em</span>&gt;</span><span class="tag">&lt;<span class="title">strong</span>&gt;</span>粗斜體強調<span class="tag">&lt;/<span class="title">strong</span>&gt;</span><span class="tag">&lt;/<span class="title">em</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/laHLnesBSPOkJMnJa0Dp_html2-1.png" alt="html2-1.png"></p>
<h1>標題表示用標籤</h1>
<p>使用h1~h6標籤分別可以表示從大到小的1級到6級的標題，當一篇文章出現標題的時候，可以使用此標籤來表示標題的部分。底下是h1~h6各個標籤範例：</p>
<figure class="highlight lang-html"><figcaption><span>header1to6.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre>...
<span class="tag">&lt;<span class="title">body</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h1</span>&gt;</span>一級標題<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h2</span>&gt;</span>二級標題<span class="tag">&lt;/<span class="title">h2</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h3</span>&gt;</span>三級標題<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h4</span>&gt;</span>四級標題<span class="tag">&lt;/<span class="title">h4</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h5</span>&gt;</span>五級標題<span class="tag">&lt;/<span class="title">h5</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h6</span>&gt;</span>六級標題<span class="tag">&lt;/<span class="title">h6</span>&gt;</span>
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
...
</pre></td></tr></table></figure>

<p><img src="/image/REVdse98QKmT7WBtIids_html2-2.png" alt="html2-2.png"></p>
<h1>水平線標籤</h1>
<p>若要使用水平線來分隔文章，可以使用hr標籤來表示，hr為一個無包內容的標籤，可以寫作<code>&lt;hr /&gt;</code>。</p>
<h1>段落與換行標籤</h1>
<p>若文章中要表示段落，可將段落使用p標籤包起來，此時段落上下會與其他段落產生分隔的效果；若僅只要使用簡單的單行換行可使用br標籤，br亦為一個無包內容的標籤，可以寫作<code>&lt;br /&gt;</code>。</p>
<h1>強調標籤</h1>
<p>若文章中有需要強調的地方，可使用em標籤做斜體強調、strong標籤去做粗體強調，若要兩者一起使用，則可巢狀式的將一個標籤包起另外一個標籤（就像範例所寫的<code>&lt;em&gt;&lt;strong&gt;強調部分&lt;/strong&gt;&lt;/em&gt;</code>）。如果以前有用過HTML的人可能會知道有另外兩個標籤與之效果相同，分別是i(斜體)與b(粗體)標籤。在HTML5開始強調用標籤來表示文章語意的做法後，會建議使用em、strong兩個標籤來取代i與b標籤。</p>
<h1>block元素與inline元素</h1>
<p>大部分的HTML元素都會定義它為block元素或是inline元素。當使用該標籤會造成該元素與上下元素自動有所分隔，則該標籤所產生的元素為block元素；相對地，若並不會造成與上下元素之間的分隔的話，則為inline元素。本範例中，像是h系列的元素和p元素就屬於block元素；而em元素和strong元素則屬於inline元素。</p>
<h1>已被廢棄使用的樣式用標籤</h1>
<p>在HTML5當中，已不建議使用center標籤(置中)與font標籤(改變文字樣式，像是文字大小、文字顏色等)來去做樣式變化，目前HTML語法強調是被使用在文件語意上，而樣式美觀的部分就全權交給CSS語法去做處理，故若要置中或是改變文字樣式的部分請使用CSS樣式去做。(其實不只center、font標籤，其他像是align屬性(該元素對齊用)、bgcolor屬性(背景顏色屬性)……等等與樣式有關係的標籤或是屬性都已不建議使用HTML語法做更改，請盡量都使用CSS語法去撰寫)</p>
<h1>pre標籤：直接顯示與原語法相同內容</h1>
<p>如果有時從別的地方直接複製一篇長篇的文章，要在該文章換行或段落的地方加上<code>&lt;br /&gt;</code>或是<code>&lt;p&gt;...&lt;/p&gt;</code>實在有點麻煩，這時候只要直接先貼上該文章，然後前後加上<code>&lt;pre&gt;...文章...&lt;/pre&gt;</code>即可，這就是pre標籤的用途。</p>
<figure class="highlight lang-html"><figcaption><span>pre.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>...
<span class="tag">&lt;<span class="title">body</span>&gt;</span>
  <span class="tag">&lt;<span class="title">pre</span>&gt;</span>
這是一篇很長的文章，
害我懶的用br和p標籤，
真是抱歉！
  <span class="tag">&lt;/<span class="title">pre</span>&gt;</span>
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
...
</pre></td></tr></table></figure>

<p><img src="/image/Dt8qrPkeSymD78W0DmB9_html2-3.png" alt="html2-3.png"></p>
<h2>參考資料</h2>
<ol>
<li>html教學 &gt; 第03章。常用標籤：<a href="http://m7.dfps.tp.edu.tw/chen/main5/ahtml/03.asp" target="_blank"><a href="http://m7.dfps.tp.edu.tw/chen/main5/ahtml/03.asp">http://m7.dfps.tp.edu.tw/chen/main5/ahtml/03.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;div&gt; and &lt;span&gt;：<a href="http://www.w3schools.com/html/html_blocks.asp" target="_blank"><a href="http://www.w3schools.com/html/html_blocks.asp">http://www.w3schools.com/html/html_blocks.asp</a></a></li>
<li>w3schools.com &gt; HTML &lt;pre&gt; tag：<a href="http://www.w3schools.com/tags/tag_pre.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_pre.asp">http://www.w3schools.com/tags/tag_pre.asp</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#HTML：基本語法結構]]></title>
    <link href="http://blog.knightzone.org/2013/09/06/2013-09-06-html-basic-grammatical-structures/"/>
    <id>http://blog.knightzone.org/2013/09/06/2013-09-06-html-basic-grammatical-structures/</id>
    <published>2013-09-06T22:33:00.000Z</published>
    <updated>2013-10-15T15:11:40.000Z</updated>
    <content type="html"><![CDATA[<p>由於開學之後會有教學Web技術的讀書會，故我現在就一邊整理HTML+CSS的資料，一邊PO上Logdown這裡讓大家看看。</p>
<p>談到HTML語法，我們先來看一個簡單的HTML範例：</p>
<figure class="highlight lang-html"><figcaption><span>firstWebsite.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="doctype">&lt;!DOCTYPE html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>這裡是標題的部分<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    這裡是內容的部分。 <span class="comment">&lt;!-- 此為註解 --&gt;</span>
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p><img src="/image/NXRkjm7lSPingeD2QxDC_html1-1.png" alt="html1-1.png"><br>底下我們開始對這個範例進行講解。</p>
<h1>HTML版本宣告</h1>
<p>每份HTML文件的第一行通常會放置該HTML是使用哪個版本的宣告，如今HTML5已漸漸成為主流，故我們會用<code>&lt;!DOCTYPE html&gt;</code>這行來進行版本宣告，若你有看過HTML4.01的版本宣告，你一定會知道以前的版本宣告有多麼冗長，它是長這樣的：<code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code>，目前您已經可以盡量使用HTML5的版本宣告，現代的瀏覽器都支援它。</p>
<h1>標籤(tag)與元素(element)</h1>
<p>HTML文件是以一堆標籤形成的元素所組合而成的，標籤即是使用小於符號、標籤名稱與大於符號所組合而成的，而元素則是由開始標籤、標籤屬性以及標籤所包之內容與結束標籤所組合而成，底下是一個HTML元素的格式：</p>
<figure class="highlight lang-html"><figcaption><span>format.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">標籤名</span> 屬性<span class="attribute">1</span>=<span class="value">'值'</span> 屬性<span class="attribute">2</span>=<span class="value">'值'</span> <span class="attribute">....</span>多個屬性以此類推&gt;</span> 元素內容 <span class="tag">&lt;/<span class="title">標籤名</span>&gt;</span>
</pre></td></tr></table></figure>

<p>最前面的即是開始標籤，而最後面在標籤名前加上斜線的即為結束標籤。</p>
<p>若元素並無元素內容時，即可簡寫為下列格式：</p>
<figure class="highlight lang-html"><figcaption><span>single.html</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">標籤名</span> 屬性<span class="attribute">1</span>=<span class="value">'值'</span> 屬性<span class="attribute">2</span>=<span class="value">'值'</span>  <span class="attribute">....</span>多個屬性以此類推 /&gt;</span>
</pre></td></tr></table></figure>

<p>即類似於將結束標籤開頭的斜線放置於開始標籤的尾部即可。</p>
<h1>html、head、body標籤</h1>
<p>每一份html文件的第一個最底部的標籤必定是html標籤，而html標籤的內容通常又會分成兩個標籤，一個是head標籤，另外一個是body標籤。</p>
<figure class="highlight lang-html"><figcaption><span>structure.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    ...
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span>
    ...
  <span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p>head標籤內放置的是此HTML文件的整體資訊，像是head內一定會放的title標籤即是設定該網頁的標題。</p>
<figure class="highlight lang-html"><figcaption><span>head.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>...
<span class="tag">&lt;<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">title</span>&gt;</span>這裡是標題的部分<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
<span class="tag">&lt;/<span class="title">head</span>&gt;</span>
...
</pre></td></tr></table></figure>

<p><img src="/image/BMw2wcZ1QkqNDM6wADvw_html1-2.png" alt="html1-2.png"></p>
<p>body標籤內則是放置網頁的內容，打在這裡面的內容都會呈現在網頁上。</p>
<figure class="highlight lang-html"><figcaption><span>body.html</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>...
<span class="tag">&lt;<span class="title">body</span>&gt;</span>
  這裡是內容的部分。
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
...
</pre></td></tr></table></figure>

<p><img src="/image/xXR4CuvHSUS9OvcCW4GD_html1-3.png" alt="html1-3.png"></p>
<h1>註解</h1>
<p>你可以利用<code>&lt;!-- 註解文字 --&gt;</code>放置註解，註解文字並不會顯示在網頁上，僅提供你在開發網頁的時候能夠方便了解該段程式碼的含意為何。</p>
<h1>參考資料</h1>
<ol>
<li>HTML基本語法：<a href="http://kaihang.tripod.com/computer/html/html.html" target="_blank"><a href="http://kaihang.tripod.com/computer/html/html.html">http://kaihang.tripod.com/computer/html/html.html</a></a></li>
<li>w3school.com &gt; HTML &lt;html&gt; tag：<a href="http://www.w3schools.com/tags/tag_html.asp" target="_blank"><a href="http://www.w3schools.com/tags/tag_html.asp">http://www.w3schools.com/tags/tag_html.asp</a></a></li>
<li>程式設計教學誌 &gt; HTML 4.01：<a href="http://pydoing.blogspot.tw/2010/11/html-401-overview.html" target="_blank"><a href="http://pydoing.blogspot.tw/2010/11/html-401-overview.html">http://pydoing.blogspot.tw/2010/11/html-401-overview.html</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/HTML/" term="HTML"/>
    <category scheme="http://blog.knightzone.org/categories/HTML/" term="HTML"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#CSharp(C#)：var與dynamic]]></title>
    <link href="http://blog.knightzone.org/2013/09/05/2013-09-05-cvar-dynamic/"/>
    <id>http://blog.knightzone.org/2013/09/05/2013-09-05-cvar-dynamic/</id>
    <published>2013-09-05T15:49:00.000Z</published>
    <updated>2013-10-15T15:11:21.000Z</updated>
    <content type="html"><![CDATA[<p>這篇的出現頗神奇的，主要是因為剛好看到Javascript大全中提到duck-typing，突然想到其實C#也是可以玩玩duck-typing，結果就打算來寫這篇Orz…</p>
<p>看到網路上似乎有人對於var和dynamic兩個的用法有點不了解，敝人就以自己沒用多久的經驗來告訴大家兩者的差別吧！</p>
<h1>var: 編譯時期決定型別 (C# 3.0)</h1>
<p>var基本上來說，並沒有跳脫強型別的規範，也就是說，用var宣告出來的變數，依然還是屬於靜態型別的變數。var僅僅是讓你在宣告變數時，若可以明確判斷該變數為何種型別的話，就可以不必在變數宣告式寫上其型別，寫上var即可。</p>
<figure class="highlight lang-cs"><figcaption><span>varExample.cs</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="keyword">var</span> s = <span class="string">"XD"</span>; <span class="comment">//由於可從後面指派的變數得知s為string型別，故可寫var</span>
<span class="keyword">var</span> model = <span class="keyword">new</span> Model(); <span class="comment">//由於可從後面指派的變數得知model為Model型別，故可寫var</span>
<span class="keyword">var</span> i; <span class="comment">//此處編譯時會出錯，因為無法確定i的型別為何。</span>
s = <span class="number">1</span>; <span class="comment">//此處編譯時會出錯，因為s會是string型別的變數，無法儲存整數值</span>
</pre></td></tr></table></figure>

<p>var一般被稱作隱含型別，它其實會在編譯的時候，編譯器自動幫你判斷該變數為何種型別，並幫你在var處填上該型別的名稱，像上面的例子var s = “XD”在編譯的時候，會用string代替掉原本的var。</p>
<p>舉一個簡單且常見的例子，當要對Dictionary型別去做foreach的瀏覽時，我們可直接使用var來代替掉用來當作每個單項的變數的宣告，底下範例：</p>
<figure class="highlight lang-cs"><figcaption><span>dictionary.cs</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">int</span>&gt; dict = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">int</span>&gt;();
<span class="comment">/* 增加dict的資料 */</span>

<span class="keyword">foreach</span>( <span class="keyword">var</span> pair <span class="keyword">in</span> dict ){  <span class="comment">//原本應該寫foreach(KeyValuePair&lt;string, int&gt; pair in dict)</span>
  <span class="comment">/* 對pair做事情 */</span>
}
</pre></td></tr></table></figure>

<h1>dynamic：執行時期決定型別 (C# 4.0)</h1>
<p>這個dynamic就是真正的動態變數，類似於Javascript、Python、Ruby…等等這些語言的變數，一個變數的型態決定於被指派的時候，底下是個範例：</p>
<figure class="highlight lang-cs"><figcaption><span>dynamicExample.cs</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>dynamic dyn; <span class="comment">//宣告一個dynamic的變數</span>
dyn = <span class="number">2</span>; <span class="comment">//可以指派整數進去</span>
dyn += <span class="number">3</span>; <span class="comment">//當dyn內存的是整數時，此行會對</span>
dyn = <span class="string">"XD"</span>; <span class="comment">//可以改變裡面存的變數為string型別的值</span>
dyn += <span class="string">"XD"</span>; <span class="comment">//當dyn內存的是字串時，此行會對</span>
dyn += <span class="number">3</span>; <span class="comment">//當dyn內存的是字串時，此行會在執行時期發生錯誤，但編譯會過。</span>
dyn.HelloEveryBody(); <span class="comment">//當dyn內存的值具有HelloEveryBody方法可調用的話會對，但若沒有則在執行時期會錯，但編譯會過。</span>
</pre></td></tr></table></figure>

<p>由於變數可以動態的替換各種不同型態的值，編譯器會無法在編譯期找出錯誤，若要找出錯誤，只能等執行時期看看裡面的變數是否可做該運算而決定。</p>
<p>而這個地方也說明了你可以用C#來做duck-typing的事情，底下用個簡單的範例作為收尾。</p>
<figure class="highlight lang-cs"><figcaption><span>quack.cs</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="keyword">void</span> Quack(dynamic duck){
  duck.quack(); <span class="comment">//只要傳進來的值具有quack方法可調用，則就會正確執行，不管其型別為何。</span>
}
</pre></td></tr></table></figure>

<h1>參考資料</h1>
<ol>
<li>MSDN &gt; var (C# 參考)：<a href="http://msdn.microsoft.com/zh-tw/library/bb383973.aspx" target="_blank"><a href="http://msdn.microsoft.com/zh-tw/library/bb383973.aspx">http://msdn.microsoft.com/zh-tw/library/bb383973.aspx</a></a></li>
<li>MSDN &gt; dynamic (C# 參考)：<a href="http://msdn.microsoft.com/zh-tw/library/dd264741.aspx" target="_blank"><a href="http://msdn.microsoft.com/zh-tw/library/dd264741.aspx">http://msdn.microsoft.com/zh-tw/library/dd264741.aspx</a></a></li>
<li>What&#39;s the difference between dynamic(C# 4) and var? - Stack Overflow：<a href="http://stackoverflow.com/questions/961581/whats-the-difference-between-dynamicc-4-and-var" target="_blank"><a href="http://stackoverflow.com/questions/961581/whats-the-difference-between-dynamicc-4-and-var">http://stackoverflow.com/questions/961581/whats-the-difference-between-dynamicc-4-and-var</a></a></li>
<li>var, dynamic 差別以及如何實作像 ViewBag 一樣的物件 - Kelp Code：<a href="http://kelp.phate.org/2011/11/var-dynamic-viewbag.html" target="_blank"><a href="http://kelp.phate.org/2011/11/var-dynamic-viewbag.html">http://kelp.phate.org/2011/11/var-dynamic-viewbag.html</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/CSharp/" term="CSharp"/>
    <category scheme="http://blog.knightzone.org/categories/CSharp/" term="CSharp"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#CSS：製作動畫效果－使用keyframe與animation]]></title>
    <link href="http://blog.knightzone.org/2013/09/04/2013-09-04-css-create-animation-effects-use-the-keyframe-animation/"/>
    <id>http://blog.knightzone.org/2013/09/04/2013-09-04-css-create-animation-effects-use-the-keyframe-animation/</id>
    <published>2013-09-04T15:40:00.000Z</published>
    <updated>2013-10-15T15:11:03.000Z</updated>
    <content type="html"><![CDATA[<p>之前在網站上搞了一個Logo用的CSS3動畫，然後現在這個部落格的標題也用了CSS3動畫，故現在想來好好地整理一下跟CSS3動畫相關的功能，底下就開始說明該如何建立CSS3動畫。</p>
<h1>使用@keyframes建立動畫內容</h1>
<p>首先先在CSS檔內建立@keyframes去制定動畫的內容，其Syntax在下方：</p>
<figure class="highlight lang-css"><figcaption><span>keyframes.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>@keyframes 動畫名稱 {
  關鍵影格選擇器1 { 眾多css樣式; }
  關鍵影格選擇器2 { 眾多css樣式; }
  ...
}
</pre></td></tr></table></figure>

<p>概念類似Flash當中的關鍵影格，在動畫內建立各個位置的時候，其css樣式為何，到最後就交由瀏覽器去做補間效果。</p>
<p>關鍵影格選擇器的部分可使用：<br>1. 0-100% ： 在時間的幾%時為何種css樣式。<br>2. from、to ： 其實意思與0%和100%一樣。<br>上列兩種選擇器範例如下：</p>
<figure class="highlight lang-css"><figcaption><span>percent-selector.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="at_rule">@keyframes myAnimation
</span>{
  0% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">0</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> yellow;</span></span><span class="rule">}</span></span>
  50% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">50</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> red;</span></span> <span class="rule">}</span></span>
  100% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">100</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue;</span></span> <span class="rule">}</span></span>
}
</pre></td></tr></table></figure>

<figure class="highlight lang-css"><figcaption><span>from-to-selector.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="at_rule">@keyframes myAnimationFromTo
</span>{
  <span class="tag">from</span> <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">20</span>px;</span></span> <span class="rule"><span class="attribute">color</span>:<span class="value"> yellow;</span></span> <span class="rule">}</span></span>
  <span class="tag">to</span> <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">80</span>px;</span></span> <span class="rule"><span class="attribute">color</span>:<span class="value"> blue;</span></span> <span class="rule">}</span></span>
}
</pre></td></tr></table></figure>

<p>建立好@keyframes動畫內容後，接著就要在欲放置該動畫的CSS樣式表內加入animation屬性。</p>
<h1>Animation屬性</h1>
<p>Animation屬性的Syntax於下：</p>
<figure class="highlight lang-css"><figcaption><span>animation.css</span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>  <span class="tag">animation</span>: <span class="tag">name</span> <span class="tag">duration</span> <span class="tag">timing</span>-<span class="tag">function</span> <span class="tag">delay</span> <span class="tag">iteration</span>-<span class="tag">count</span> <span class="tag">direction</span>;
</pre></td></tr></table></figure>

<p>或者依照上面每一項的名稱皆可分開寫：</p>
<figure class="highlight lang-css"><figcaption><span>animation-split.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="tag">animation</span>-<span class="tag">name</span>: 動畫名稱;
<span class="tag">animation</span>-<span class="tag">duration</span>: 動畫作用時間;
<span class="tag">animation</span>-<span class="tag">timing</span>-<span class="tag">function</span>: 動畫補間時運用的計算公式;
<span class="tag">animation</span>-<span class="tag">delay</span>: 動畫需間隔多久後才開始;
<span class="tag">animation</span>-<span class="tag">iteration</span>-<span class="tag">count</span>: 動畫作用次數;
<span class="tag">animation</span>-<span class="tag">direction</span>: 動畫作用的方向;
</pre></td></tr></table></figure>

<p>animation-name指的就是上面定義的@keyframes的名稱，找到你想用的@keyframes的名稱，填上去即可。</p>
<p>接著可以從animation-duration去指定其動畫時間，這也是為什麼上面定義@keyframes不是使用時間，而是使用%，這可以讓同一個動畫重複使用，並且不一定要執行相同的時間。</p>
<p>timing-function有linear、ease、ease-in、ease-out、ease-in-out可以用，或者可用cubic-bezier(n,n,n,n)來自己制定(0 &lt;= n &lt;= 1)。</p>
<p>至於iteration-count如果要無限多次可用infinite。</p>
<p>最後動畫作用的方向指的是動作作用的時候可以是@keyframes相反的方向(to-&gt;from、100%-&gt;0%)(reverse)，或是作用完後又回頭(alternate)、或是先相反再變正常順序(alternate-reverse)。</p>
<p>底下用個範例去使用上面定義的myAnimation動畫：</p>
<figure class="highlight lang-css"><figcaption><span>div-animation.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">div</span><span class="rules">{
  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100</span>px;</span></span>
  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100</span>px;</span></span>
  <span class="rule"><span class="attribute">animation</span>:<span class="value"> myAnimation <span class="number">3</span>s ease <span class="number">0</span>s infinite alternate;</span></span>
<span class="rule">}</span></span>
</pre></td></tr></table></figure>

<p><img src="/image/qvZxc31IRNudZBNFdMna_CSSAnimationExample.gif" alt="CSSAnimationExample.gif"></p>
<p>大體上製作一個CSS Animation就是這樣的一個流程，你也可以搭配CSS3的transform屬性去作出更多移動、翻轉、放大縮小的效果，甚至是3D翻轉喔！！</p>
<p>如果不想自己coding出動畫，想藉助一些工具來做動畫，可以參考使用<a href="http://css3maker.com/" target="_blank">CSS 3.0 Maker</a>唷！</p>
<h1>-webkit-前綴字</h1>
<p>由於目前通用性的寫法在Chrome上還是不能用，請在CSS多複製一份@keyframes動畫與animation屬性，並在前面加上-webkit-前綴字，如下列範例所示：</p>
<figure class="highlight lang-css"><figcaption><span>webkit.css</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="at_rule">@keyframes myAnimation
</span>{
  0% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">0</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> yellow;</span></span><span class="rule">}</span></span>
  50% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">50</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> red;</span></span> <span class="rule">}</span></span>
  100% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">100</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue;</span></span> <span class="rule">}</span></span>
}

<span class="at_rule">@-webkit-keyframes myAnimation
</span>{
  0% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">0</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> yellow;</span></span><span class="rule">}</span></span>
  50% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">50</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> red;</span></span> <span class="rule">}</span></span>
  100% <span class="rules">{ <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">100</span>px;</span></span> <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue;</span></span> <span class="rule">}</span></span>
}

<span class="tag">div</span><span class="rules">{
  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100</span>px;</span></span>
  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100</span>px;</span></span>
  <span class="rule"><span class="attribute">animation</span>:<span class="value"> myAnimation <span class="number">3</span>s ease <span class="number">0</span>s infinite alternate;</span></span>
  <span class="rule"><span class="attribute">-webkit-animation</span>:<span class="value"> myAnimation <span class="number">3</span>s ease <span class="number">0</span>s infinite alternate;</span></span>
<span class="rule">}</span></span>
</pre></td></tr></table></figure>

<h1>參考資料</h1>
<ol>
<li>w3schools.com &gt; CSS3 @keyframes Rule：<a href="http://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp" target="_blank"><a href="http://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp">http://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp</a></a></li>
<li>w3schools.com &gt; CSS3 animation Property：<a href="http://www.w3schools.com/cssref/css3_pr_animation.asp" target="_blank"><a href="http://www.w3schools.com/cssref/css3_pr_animation.asp">http://www.w3schools.com/cssref/css3_pr_animation.asp</a></a></li>
<li>池水間 - 你需要知道的CSS3動畫技術 ::: 睡蓮‧池水間 - waterlily-lsl.com：<a href="http://waterlily-lsl.com/modules/article/view.article.php/c2/232/p2" target="_blank"><a href="http://waterlily-lsl.com/modules/article/view.article.php/c2/232/p2">http://waterlily-lsl.com/modules/article/view.article.php/c2/232/p2</a></a></li>
<li>CSS 3.0 Maker：<a href="http://css3maker.com/" target="_blank"><a href="http://css3maker.com/">http://css3maker.com/</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/CSS/" term="CSS"/>
    <category scheme="http://blog.knightzone.org/categories/CSS/" term="CSS"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#Javascript：Cross Domain AJAX－使用PHP將網頁資訊轉JSONP]]></title>
    <link href="http://blog.knightzone.org/2013/09/03/2013-09-03-javascriptcross-domain-ajax-using-a-php-web-page-information-to-the-jsonp/"/>
    <id>http://blog.knightzone.org/2013/09/03/2013-09-03-javascriptcross-domain-ajax-using-a-php-web-page-information-to-the-jsonp/</id>
    <published>2013-09-04T02:50:00.000Z</published>
    <updated>2013-10-15T15:10:33.000Z</updated>
    <content type="html"><![CDATA[<p>其實在使用<a href="http://knightzone.logdown.com/posts/98927-javascriptcross-domain-ajax-using-yql" target="_blank">上篇</a>使用YQL來進行Cross Domain AJAX之前，我是先使用別人寫好的PHP網頁將要抓取之網站資訊轉成JSONP格式回來。</p>
<h1>ba-simple-proxy.php</h1>
<p>此頁別人寫好的PHP連結在此：<a href="http://benalman.com/code/projects/php-simple-proxy/docs/files/ba-simple-proxy-php.html" target="_blank">ba-simple-proxy.php</a></p>
<p>簡單來說，這PHP就是當作一個代理網頁，給它網址它就會抓取該網址所指的網頁內容，並用JSONP的格式回傳回來。</p>
<p>使用前先將該頁PHP內的 $enable_jsop = false; 從false改為true，然後上傳到PHP伺服器，接著使用AJAX抓取資料的js部分寫上：</p>
<figure class="highlight lang-js"><figcaption><span>xdomainajax.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>$.getJSON( <span class="comment">/* ba-simple-proxy.php所在地 + "?callback=?&url=" + 欲抓資料之網頁所在的網址 */</span> , <span class="keyword">function</span>(data){
  <span class="comment">/* data.contents即是該網頁內容 */</span>
});
</pre></td></tr></table></figure>

<p>這樣就可以進行Cross Domain AJAX了！</p>
<h1>參考資料</h1>
<ol>
<li>Cross Domain AJAX 抓網頁撈過界以及如何整合兩個部落格的標籤：<a href="http://user.frdm.info/ckhung/b/js/xdomain.php" target="_blank"><a href="http://user.frdm.info/ckhung/b/js/xdomain.php">http://user.frdm.info/ckhung/b/js/xdomain.php</a></a></li>
<li>Design2U » Cross Domain Ajax 跨網域抓取資料(JSONP)：<a href="http://design2u.me/blog/936/cross-domain-ajax-cross-domain-data-has-been-retrieved-jsonp" target="_blank"><a href="http://design2u.me/blog/936/cross-domain-ajax-cross-domain-data-has-been-retrieved-jsonp">http://design2u.me/blog/936/cross-domain-ajax-cross-domain-data-has-been-retrieved-jsonp</a></a></li>
<li>SIMPLE PHP PROXY: GET EXTERNAL HTML, JSON AND MORE!：<a href="http://benalman.com/code/projects/php-simple-proxy/docs/files/ba-simple-proxy-php.html" target="_blank"><a href="http://benalman.com/code/projects/php-simple-proxy/docs/files/ba-simple-proxy-php.html">http://benalman.com/code/projects/php-simple-proxy/docs/files/ba-simple-proxy-php.html</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/Javascript/" term="Javascript"/>
    <category scheme="http://blog.knightzone.org/tags/Ajax/" term="Ajax"/>
    <category scheme="http://blog.knightzone.org/categories/Javascript/" term="Javascript"/>
    <category scheme="http://blog.knightzone.org/categories/Javascript/Ajax/" term="Ajax"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#Javascript：Cross Domain AJAX－使用YQL]]></title>
    <link href="http://blog.knightzone.org/2013/09/03/2013-09-03-javascriptcross-domain-ajax-using-yql/"/>
    <id>http://blog.knightzone.org/2013/09/03/2013-09-03-javascriptcross-domain-ajax-using-yql/</id>
    <published>2013-09-03T08:13:00.000Z</published>
    <updated>2013-10-15T15:10:44.000Z</updated>
    <content type="html"><![CDATA[<p>在這次撰寫無名備份工具的途中，由於寫的是Web應用程式，我要抓取無名部落格上的資料就必須要使用到AJAX，但是基於安全性的問題，AJAX在回應非JSONP的情況下，僅支援同域名之間的抓取資料，那麼該怎樣才能跨越域名去抓取資料呢？</p>
<h1>使用YQL</h1>
<p>查了一下發現有人是使用Yahoo所提供的一套API－YQL來進行跨域抓資料的動作，而正好有人也幫你把它包裝起來寫成一個jQuery的plugin，讓你引用該javascript碼後使用$.get就可以直接跨越域名去抓取資料。</p>
<p>底下正是該plugin的github位址(使用此plugin，也必須引入<a href="http://jquery.com/" target="_blank">jQuery函式庫</a>)：<br><a href="https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/" target="_blank"><a href="https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/">https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/</a></a></p>
<p>引用以上的plugin後，在要做讀取資料的地方寫入底下的Code：</p>
<figure class="highlight lang-js"><figcaption><span>xdomainajax.js</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>$.get(<span class="comment">/* 此處放置欲抓取之資料所在的URL */</span>, <span class="keyword">function</span>(data){
  <span class="comment">/* data.responseText即為所在該URL的網頁內容 */</span>
});
</pre></td></tr></table></figure>

<p>大體上我就是這樣成功的將資料抓進來了！！</p>
<h1>參考資料</h1>
<ol>
<li>Cross Domain AJAX 抓網頁撈過界以及如何整合兩個部落格的標籤：<a href="http://user.frdm.info/ckhung/b/js/xdomain.php" target="_blank"><a href="http://user.frdm.info/ckhung/b/js/xdomain.php">http://user.frdm.info/ckhung/b/js/xdomain.php</a></a></li>
<li>Cross-domain requests with jQuery：<a href="http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/" target="_blank"><a href="http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/">http://james.padolsey.com/javascript/cross-domain-requests-with-jquery/</a></a></li>
<li>Cross domain mod for jQuery (Github)：<a href="https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/" target="_blank"><a href="https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/">https://github.com/padolsey/jQuery-Plugins/tree/master/cross-domain-ajax/</a></a></li>
</ol>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/Javascript/" term="Javascript"/>
    <category scheme="http://blog.knightzone.org/tags/Ajax/" term="Ajax"/>
    <category scheme="http://blog.knightzone.org/categories/Javascript/" term="Javascript"/>
    <category scheme="http://blog.knightzone.org/categories/Javascript/Ajax/" term="Ajax"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#UVa：10082 – WERTYU]]></title>
    <link href="http://blog.knightzone.org/2011/11/29/2011-11-29-uva10082-wertyu/"/>
    <id>http://blog.knightzone.org/2011/11/29/2011-11-29-uva10082-wertyu/</id>
    <published>2011-11-30T07:08:00.000Z</published>
    <updated>2013-10-15T15:14:32.000Z</updated>
    <content type="html"><![CDATA[<h1>解法指引</h1>
<p>先把鍵盤打成一個陣列，這樣比較好得解。</p>
<h1>程式碼(C++：0.012)</h1>
<figure class="highlight lang-C++"><figcaption><span>10082.cpp</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre>/<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">*/</span>
/* UVa <span class="number">10082</span> WERTYU                                    <span class="variable">*/</span>
/* Author: LanyiKnight [at] knightzone.org             <span class="variable">*/</span>
/* Version: <span class="number">2012</span>/<span class="number">03</span>/<span class="number">23</span>                                 <span class="variable">*/</span>
/<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">*/</span>
<span class="comment">#include&lt;iostream&gt;</span>
<span class="comment">#include&lt;cstdio&gt;</span>
<span class="comment">#include&lt;cstring&gt;</span>
using namespace std;
  
<span class="keyword">int</span> main(){
  const char keyboard[] = <span class="string">"   `1234567890-=QWERTYUIOP[]\\ASDFGHJKL;'ZXCVBNM,./"</span>;
  const <span class="keyword">int</span> kblen = strlen(keyboard);
  char hash[<span class="number">256</span>];
  string <span class="keyword">s</span>;
   
  <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">2</span> ; i &lt; kblen ; i++ )
    hash[keyboard[i]] = keyboard[i-<span class="number">1</span>];
   
  <span class="keyword">while</span>( getline( cin, <span class="keyword">s</span> ) ){
    <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="keyword">s</span>.<span class="keyword">length</span>() ; i++ )
      <span class="keyword">printf</span>( <span class="string">"<span class="variable">%c</span>"</span>, hash[<span class="keyword">s</span>[i]] );
    <span class="keyword">printf</span>( <span class="string">"\n"</span> );
  }
  <span class="keyword">return</span> <span class="number">0</span>;
}
</pre></td></tr></table></figure>

]]></content>
    <category scheme="http://blog.knightzone.org/tags/UVa/" term="UVa"/>
    <category scheme="http://blog.knightzone.org/categories/UVa/" term="UVa"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#UVa：272 – TEX Quotes]]></title>
    <link href="http://blog.knightzone.org/2011/11/25/2011-11-25-uva272-tex-quotes/"/>
    <id>http://blog.knightzone.org/2011/11/25/2011-11-25-uva272-tex-quotes/</id>
    <published>2011-11-25T08:21:00.000Z</published>
    <updated>2013-10-15T15:14:41.000Z</updated>
    <content type="html"><![CDATA[<h1>解法指引</h1>
<p>照著題目要求，更換雙引號即可。</p>
<h1>程式碼(C++：0.016)</h1>
<figure class="highlight lang-C++"><figcaption><span>272.cpp</span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="code"><pre>/<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">*/</span>
/* UVa <span class="number">272</span> TEX Quotes                                  <span class="variable">*/</span>
/* Author: LanyiKnight [at] knightzone.org             <span class="variable">*/</span>
/* Version: <span class="number">2011</span>/<span class="number">11</span>/<span class="number">24</span>                                 <span class="variable">*/</span>
/<span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">**</span><span class="variable">*/</span>
<span class="comment">#include&lt;iostream&gt;</span>
<span class="comment">#include&lt;cstdio&gt;</span>
using namespace std;
 
<span class="keyword">int</span> main(){
  string <span class="keyword">s</span>;
  bool leftorright = <span class="number">0</span>;
  <span class="keyword">while</span>( getline( cin, <span class="keyword">s</span> ) )
  {
    <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="keyword">s</span>.<span class="keyword">length</span>() ; i++ )
      <span class="keyword">if</span>( <span class="keyword">s</span>[i] == <span class="string">'"'</span> ){
        <span class="keyword">if</span>( leftorright )
          <span class="keyword">printf</span>( <span class="string">"''"</span> );
        <span class="keyword">else</span>
          <span class="keyword">printf</span>( <span class="string">"``"</span> );
        leftorright ^= <span class="number">1</span>;
      }
      <span class="keyword">else</span>{
        <span class="keyword">printf</span>( <span class="string">"<span class="variable">%c</span>"</span>, <span class="keyword">s</span>[i] );
      }
    <span class="keyword">printf</span>( <span class="string">"\n"</span> );
  }
  <span class="keyword">return</span> <span class="number">0</span>;
}
</pre></td></tr></table></figure>

]]></content>
    <category scheme="http://blog.knightzone.org/tags/UVa/" term="UVa"/>
    <category scheme="http://blog.knightzone.org/categories/UVa/" term="UVa"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#生活趣事：[10.09.27~10.10.03]－開始忙碌的大學生活]]></title>
    <link href="http://blog.knightzone.org/2010/10/03/2010-10-03--life-interesting-9-2710-3-started-a-busy-college-student-living/"/>
    <id>http://blog.knightzone.org/2010/10/03/2010-10-03--life-interesting-9-2710-3-started-a-busy-college-student-living/</id>
    <published>2010-10-04T05:06:00.000Z</published>
    <updated>2013-10-20T17:00:06.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://user-image.logdown.io/user/412/blog/4012/post/147140/PlRATpGmSPaS6aYVYEHX_lani-0.png" alt="灆洢"><br>各位安安^^/<br>來跟各位談談這禮拜發生的事情吧！</p>
<hr>
<h1>9/27(一)</h1>
<p>今天計概考試，考了一節課，我也才在前一天晚上剛拿到計概考古題，感謝家緯學長＞_＜不過由於這考古題是系學會的東西，學長也不知道能不能發佈在班版上，所以我就對每一個人的MSN和Yahoo丟考古題～XD</p>
<p>雖然大概還是有很多人會沒拿到吧Q_Q….接下來兩節英文，上完第一課了，下禮拜要上第二課，老師出了好多作業Orz……看來又要做不完了(汗</p>
<p>中午找不到同學群Q_Q 後來繞了好久在學七舍餐廳才遇到浩庭，之後我們就在〔國防教育一〕的教室聊到上課XD 國防教育一的教官跟我們資工系的開始有點熟了XD 教官人超好的！</p>
<p>晚上因為浩庭要去本部參加熱舞社迎新，我也一起到本部去，順便去看看吉他社的攤子，看著吉他代訂的攤子，超想買的啊＞口＜</p>
<h1>9/28(二)</h1>
<p>早上是基礎電子學，今天終於有實驗課了！雖然只是介紹用具，而且一堂課就下課了XD&quot;</p>
<p>中午和聖別學長去邵爸爸的家吃東西加念聖經，今天吃的是白醬，這白醬做的超棒的！超好吃！XD</p>
<p>讀完之後，就去本部上環境與健康，結果老師說為了讓上禮拜三因為中秋節放假的那班跟我們這班進度一樣，因此，今天才講10分鐘就下課了！XD超爽的！</p>
<p>空出來的時間就跑去樸101使用英語自學教室，因為忘記帶本子，害我還得花10塊錢買Q_Q(原價12元)，不過那邊超棒的！有空中英語教室播在電視上的那些影片以及台詞，整個超讚！甚至還有辛普森家庭……等等影片可以看，讓我去了一次還想再去第二次啊啊啊啊啊啊啊！！！！！</p>
<p>晚上去系桌，多了崇瑞跟雅翎～最後安偉也來了！系桌從我之前只有一個103級的人來，變成有四個103級的人了！XD而且練習時間：二、四，剛好我們四個人禮拜四都有事XD 禮拜二真是太讚了！偏偏其他系的系桌也想跟我們搶禮拜二，讓隊長很傷腦筋呢…Q_Q</p>
<h1>9/29(三)</h1>
<p>早上10:00，到本部去使用樸101的英語自學教室設備，用完後終於到吉他社的攤位去訂吉他且加入吉他社了＞_＜！之後接著映竹的電話，說他已經做剛剛的校車前去分部了，所以我就趕緊走+跑到分部去，路途還到光南買了派和到路邊攤買了西瓜汁。到了分部的系辦後，跟映竹拿書，做服務學習。我們這組是清潔2F，2F沒有很大，很快就掃完了～</p>
<p>接著就是程式設計（一）的課，跟維琳約好要坐在她旁邊給她問問題～XD</p>
<p>晚上去看吉他社的迎新演唱會，超讚的啦！雖然麥克風和吉他的聲音一直弄很久，不過每個上台的學長姐都唱得很不錯呀！＞_＜</p>
<h1>9/30(四)</h1>
<p>今天滿滿一整天的課Orz…</p>
<p>體育課教籃球，首先當然又從歷史開始說起XD~再來開始教傳球，胸前傳球、彈地傳球、背後傳球以及過頂傳球。</p>
<p>背後傳球最難Orz…不過最後有點感覺了XD</p>
<p>在練習完後，老師讓我們打3on3，不能運球，只能傳球跟投球，但是偏偏我今天怎麼投球都不進，甚至還籃外大空心…= =&quot;</p>
<p>真慘烈Orz…</p>
<p>接著下來是計概，禮拜一考的計概拿滿分，超開心的＞<em>＜~我的計概有進步的趨勢呀～！以前比賽計概每次都是我的難科，我終於能扭轉這個劣勢了嗎？＞</em>＜~~</p>
<p>下午是微積分，老師講了很多節，最後還勾了作業，以後作業就要用電子信箱的模式公布了～請各位盡請期待！</p>
<p>晚上跟安偉和浩庭到本部，去吃麵包店的麵包當晚餐，本來還打算一起去樸101一趟，但是路上被傳教，因此就沒時間了～就先帶浩庭到地餐(他們熱舞社練舞的地方)，我再和安偉去漫畫社D組(繪圖組)學習，今天教的是構圖，如果凸顯主角跟重點。講完之後，練習的題目是〔明星〕，對於不會畫人的我，這題目真的很難Orz…真沒辦法呀Q_Q…</p>
<h1>10/1(五)</h1>
<p>今天也是很累的一整天的課呀Q<em>Q…早上國文，上莊子，了解道家這項武功(誤)接著是物理與生活，多了一位國華系的學生，來自波蘭，好特別＞</em>＜而且他中文講得超好！還說要留在台灣！XD</p>
<p>下午是第一堂程式設計（一），教授講Dev-C++的除錯功能時一直犯錯，教授超可愛＞////＜…(謎：不要犯罪啊！！)接著是基礎電子學，然後就是回家了！</p>
<p>回家前，先和沈ψω先生以及浩庭到光南買東西，接著浩庭到我家來繼續破TorchLight，雖然感覺還很漫長就是了(汗)…</p>
<h1>10/2(六)</h1>
<p>今天早上，用MSN開了計概分組的討論視窗，拼命丟跟Unix/Linux/Mac OS有關的資料XD</p>
<p>下午和惡搞天使以及河水去北車的漢堡王吃飯，之後來我家玩，然後我們討論了一下12/31號的跨年方式，打算去唱歌！看來我們得早點訂位才行了=w=…今天還一起看了很多Russel Peters的搞笑影片，真的都超好笑的呀！XD</p>
<h1>10/3(日)</h1>
<p>今天早上去師大本部人發系的辦公室繼續我的家教，看到瀚元的數學還是老樣子XD“”我就努力地繼續加強他XD</p>
<p>下午在我家教奸商JAVA教到晚上，送他回去後，就去跟豪豪就吃牛排，吃完回到家，趕作業呀Q_Q</p>
<p>基礎電子學的實驗預報總算是弄好了！繼續搞英文作業Q_Q……</p>
<hr>
<p>就到這裡了～各位晚安^^/</p>
<p><img src="http://user-image.logdown.io/user/412/blog/4012/post/147140/F7l8EmD9Tbqryo7mWd39_lani-2.png" alt="灆洢"></p>
<blockquote>
<p>原始文章位址：<br>1. <a href="http://www.knightzone.org/wordpress/archives/486" target="_blank">http://www.knightzone.org/wordpress/archives/486</a><br>2. <a href="http://maplewing.blogspot.tw/2010/10/927103.html" target="_blank">http://maplewing.blogspot.tw/2010/10/927103.html</a></p>
</blockquote>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/生活趣事/" term="生活趣事"/>
    <category scheme="http://blog.knightzone.org/categories/生活趣事/" term="生活趣事"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[#生活趣事：[09.02.25]－考幹日]]></title>
    <link href="http://blog.knightzone.org/2009/02/25/2009-02-25--life-interesting-090225-exam-day/"/>
    <id>http://blog.knightzone.org/2009/02/25/2009-02-25--life-interesting-090225-exam-day/</id>
    <published>2009-02-26T05:48:00.000Z</published>
    <updated>2013-10-20T18:32:12.000Z</updated>
    <content type="html"><![CDATA[<p>一年就這樣過去了，又到了考幹的時節了=D，不禁又想起去年的考幹狀況了XD，有點懷念…</p>
<p>中午到圖書館，開第一次與地科老師討論的專題網頁比賽會議，發覺時間真的超趕Orz，我還有好多東西要弄呢Orz</p>
<p>今天社課開始考幹，為期一個禮拜的考幹期，考完之後就要開始討論幹部選擇事宜了=P，加油了=D</p>
<blockquote>
<p>原始文章位址：<a href="http://www.wretch.cc/blog/fafnar123/9699530" target="_blank">http://www.wretch.cc/blog/fafnar123/9699530</a></p>
</blockquote>
]]></content>
    <category scheme="http://blog.knightzone.org/tags/生活趣事/" term="生活趣事"/>
    <category scheme="http://blog.knightzone.org/categories/生活趣事/" term="生活趣事"/>
  </entry>
</feed>
